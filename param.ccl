# Parameter definitions for thorn FLRWSolver

CCTK_REAL FLRW_init_rho "FLRW Initial Density"
{
  0.0:* :: "Must be positive"
} 0.0

CCTK_REAL phi_phase_offset "The phase offset(eta) of phi=A * sin(kx*x - eta) for single mode perturbation"
{
 *:* :: "Anything"
} 0.0

KEYWORD FLRW_perturb "Add perturbation to matter and metric"
{
 "yes" :: "Add perturbation to FLRW spacetime"
 "no" :: "Do not add perturbation, will run FLRW spacetime"
} "no"

KEYWORD FLRW_perturb_type "Add perturbation"
{ 
 "single_mode" :: "Single mode perturbation (sine wave). Set FLRW_perturb_direction to choose dimensions of perturbation and single_perturb_wavelength."
 "CMB_like" :: "CMB-like perturbation. Generated from CAMB power spectrum of density at the CMB. Require files output from Python script"
} "CMB_like"

KEYWORD FLRW_ICs_dir "Directory containing initial conditions files for the simulation"
{
 "initial_conditions/" :: "For Pawsey's Magnus, softlink to /group/pawsey0202/software/initial_conditions/"
} "initial_conditions/"

KEYWORD describe_ics "Description of initial conditions being used - this determines where ICs are taken from ** to add 10/26 Gpc **"
{
 "/100Mpc_half" :: "100 Mpc physical box size, with half sampling of P(k), i.e. kmax = nyquist/2"
 "/100Mpc_full" :: "100 Mpc physical box size, with full sampling of P(k) for this size + resolution"
 "/250Mpc_full" :: "250 Mpc physical box size, with full sampling of P(k) for this size + resolution"
 "/250Mpc_half" :: "250 Mpc physical box size, with half sampling of P(k), i.e. kmax = nyquist/2"
 "/500Mpc_full" :: "500 Mpc physical box size, with full sampling of P(k) for this size + resolution"
 "/500Mpc_half" :: "500 Mpc physical box size, with half sampling of P(k), i.e. kmax = nyquist/2"
 "/1Gpc_full" :: "1 Gpc physical box size, with full sampling of P(k) for this size + resolution"
 "/1Gpc_half" :: "1 Gpc physical box size, with half sampling of P(k), i.e. kmax = nyquist/2"
} "/100Mpc_half"

KEYWORD FLRW_perturb_direction "Choose which direction to perturb (only valid if FLRW_perturb_type = 'single_mode')"
{
"x" :: "perturb x-direction only"
"y" :: "perturb y-direction only"
"z" :: "perturb z-direction only"
"all" :: "perturb all dimensions"
} "all"

CCTK_REAL FLRW_resolution "Resolution of box used (only used if FLRW_perturb_type = 'CMB_like')"
{
 0.0:* :: "Must be positive."
} 32.0

CCTK_REAL single_perturb_wavelength "Wavelength of single mode perturbation"
{
 0.0:* :: "Must be positive and smaller than or equal to box length."
} 1.0

CCTK_REAL FLRW_lapse_value "Value of background initial lapse (alpha)"
{
  *:* :: "Anything"
} 1.0

CCTK_REAL phi_perturb_amplitude "Amplitude of perturbation in phi (relative to rho0) - implicitly sets amplitude of rho perturbation"
{
  0.0:* :: "Must be positive"
} 0.0

# CCTK_REAL FLRW_xmax "Maximum x-value of grid - assumed grid spans [-FLRW_xmax:FLRW_xmax] in each dimension"
# {
#   *:* :: "Anything"
# } 240.

# This below didn't work to use xmax in flrw.f90, dont know why
# shares:CoordBase

# USES real xmin
# USES real ymin
# USES real zmin
# USES real xmax
# USES real ymax
# USES real zmax

shares:HydroBase

EXTENDS KEYWORD initial_hydro ""
{
  "flrw" :: "flrw star initial hydrobase variables"
}

shares:admbase

EXTENDS KEYWORD initial_data
{
  "flrw" :: "FLRW star initial metric"
}

EXTENDS KEYWORD initial_lapse
{
  "flrw" :: "FLRW initial lapse"
}

EXTENDS KEYWORD initial_dtlapse
{
  "flrw" :: FLRW initial dtlapse
}

EXTENDS KEYWORD initial_shift
{
  "flrw" :: "FLRW initial shift"
}

USES KEYWORD metric_type

shares:StaticConformal

USES KEYWORD conformal_storage

shares:GRHydro

USES real rho_abs_min
USES real rho_rel_min
USES REAL initial_rho_abs_min
USES REAL initial_rho_rel_min
USES REAL initial_atmosphere_factor
USES real GRHydro_rho_central


shares:EOS_Omni
USES REAL gl_gamma
